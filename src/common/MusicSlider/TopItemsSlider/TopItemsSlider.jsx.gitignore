// import React from 'react';
// // import { useTopItemsQuery } from '../../../hooks/useTopItemsQuery';
// import {useTopTracksQuery} from "../../../hooks/useTopItemsQuery"
// import Carousel from 'react-multi-carousel';
// import 'react-multi-carousel/lib/styles.css';
// import './TopItemSlider.style.css';  // 슬라이더 스타일
// import { musicSliderResponsive } from '../../../constants/musicSliderResponsive';  // 반응형 설정

// const TopItemsSlider = ({ title, searchQuery }) => {
//   // 데이터를 불러오기 위한 커스텀 훅 호출
//   const { data: tracks, isLoading, isError, error } = useTopTracksQuery({ q: searchQuery });

//   if (isLoading) {
//     return <div>Loading...</div>;  // 로딩 상태 처리
//   }

//   if (isError) {
//     return <div>Error: {error.message}</div>;  // 에러 상태 처리
//   }

//   // 슬라이더의 제목 설정
//   // const title = type === 'albums' ? 'Top Albums' : type === 'artists' ? 'Top Artists' : 'Top Tracks';

//   return (
//     <div className="carousel-container">
//       <h1>{title}</h1>
//       <Carousel
//         showDots={true}  // 점을 표시하도록 설정
//         responsive={musicSliderResponsive}  // 반응형 설정
//         infinite={true}  // 슬라이드가 무한히 순환하도록 설정
//         autoPlay={true}  // 자동 재생 설정
//         customTransition="all .5"  // 부드러운 전환 설정
//         transitionDuration={500}  // 전환 시간 설정
//         containerClass="carousel-container"  // 컨테이너 스타일 클래스
//         removeArrowOnDeviceType={["tablet", "mobile"]}  // 특정 기기에서 화살표 제거
//         dotListClass="custom-dot-list-style"  // 점 스타일 클래스 적용
//         itemClass="carousel-item-padding-40-px"  // 슬라이드 항목 스타일 클래스
//       >
//         {/* 항목을 순회하며 슬라이더 항목을 생성 */}
//         {tracks.map((track) => (
//           <div className="carousel-item" key={track.id}>
//             <img 
//               src={track.images?.[0]?.url || '/placeholder-image.jpg'}  // 이미지가 없을 경우 대체 이미지
//               alt={track?.name}  // 아티스트일 경우 이름, 앨범일 경우 앨범 이름
//             />
           
           
//           </div>
//         ))}
//       </Carousel>
//     </div>
//   );
// };

// export default TopItemsSlider;






// import React, { useState } from 'react';
// import { useArtistsQuery } from '../../../hooks/useTopItemsQuery';
// import { useTopTracksQuery } from '../../../hooks/useTopItemsQuery';
// import Carousel from 'react-multi-carousel';
// import 'react-multi-carousel/lib/styles.css';
// import "./TopItemSlider.style.css"
// import { musicSliderResponsive } from '../../../constants/musicSliderResponsive';

// const TopTracksSlider = ({ searchQuery }) => {

//   const [selectedArtistId, setSelectedArtistId] = useState(null);

//   const { data: artists, isLoading: isLoadingArtists, isError: isErrorArtists, error: errorArtists } = useArtistsQuery({ q: searchQuery });


//   const { data: tracks, isLoading: isLoadingTracks, isError: isErrorTracks, error: errorTracks } = useTopTracksQuery({ artistId: selectedArtistId });

//   if (isLoadingArtists) {
//     return <div>Loading artists...</div>;
//   }

//   if (isErrorArtists) {
//     return <div>Error: {errorArtists.message}</div>;
//   }

//   const handleArtistClick = (artistId) => {
//     setSelectedArtistId(artistId); // 아티스트 ID 선택
//   };

//   return (
//     <div>
//       <h1>Top Tracks by Artist</h1>
      
//       <div>
//         <h2>Search Results for "{searchQuery}"</h2>
//         {artists.map((artist) => (
//           <div key={artist.id} onClick={() => handleArtistClick(artist.id)}>
//             <h3>{artist.name}</h3>
//           </div>
//         ))}
//       </div>

//       {selectedArtistId && (
//         <div>
//           <h2>Top Tracks</h2>
//           {isLoadingTracks ? (
//             <div>Loading tracks...</div>
//           ) : isErrorTracks ? (
//             <div>Error: {errorTracks.message}</div>
//           ) : (
//             <Carousel
//               showDots={true}
//               responsive={musicSliderResponsive}
//               infinite={true}
//               autoPlay={true}
//               customTransition="all .5"
//               transitionDuration={500}
//               containerClass="carousel-container"
//               removeArrowOnDeviceType={["tablet", "mobile"]}
//               dotListClass="custom-dot-list-style"
//               itemClass="carousel-item-padding-40-px"
//             >
//               {tracks.map((track) => (
//                 <div key={track.id}>
//                   <img src={track.album.images[0]?.url} alt={track.name} />
//                   <h3>{track.name}</h3>
//                   <p>{track.artists.map(artist => artist.name).join(', ')}</p>
//                   <audio controls src={track.preview_url}>
//                     Your browser does not support the audio element.
//                   </audio>
//                 </div>
//               ))}
//             </Carousel>
//           )}
//         </div>
//       )}
//     </div>
//   );
// };

// export default TopTracksSlider;


//  3  ok
// import React from "react";
// import Carousel from "react-multi-carousel";
// import "react-multi-carousel/lib/styles.css";
// import { useTop10ArtistsTracks } from "../../../hooks/useTopItemsQuery";
// import "./TopItemSlider.style.css";
// import { musicSliderResponsive } from "../../../constants/musicSliderResponsive";

// const TopTracksSlider = ({ searchQuery }) => {
//   const { top10Tracks, isLoading, isError, error } = useTop10ArtistsTracks({
//     q: searchQuery,
//   });

//   if (isLoading) {
//     return <div>Loading...</div>;
//   }

//   if (isError) {
//     return <div>Error: {error.message}</div>;
//   }


//     console.log ("top10",top10Tracks )
//   return (
//     <div className="carousel-container">
//       <h1>Top 10 Tracks</h1>
//       <Carousel
//         showDots={true}
//         responsive={musicSliderResponsive}
//         infinite={true}
//         autoPlay={true}
//         customTransition="all .5"
//         transitionDuration={500}
//         containerClass="carousel-container"
//         removeArrowOnDeviceType={["tablet", "mobile"]}
//         dotListClass="custom-dot-list-style"
//         itemClass="carousel-item-padding-40-px"
//       >
//         {top10Tracks.map((track) => (
//           <div className="carousel-item" key={track.id}>
//             <img
//               src={track.album.images[0]?.url || "/placeholder-image.jpg"}
//               alt={track.name}
//             />
//             <h2>노래: {track.name}</h2>
//             <p>가수: {track.artists.map((artist) => artist.name).join(", ")}</p>
//           </div>
//         ))}
//       </Carousel>
//     </div>
//   );
// };

// export default TopTracksSlider;


// 4-1 map 오류
// import React from "react";
// import Carousel from "react-multi-carousel";
// import "react-multi-carousel/lib/styles.css";
// import { useTop10ArtistsTracks } from "../../../hooks/useTopItemsQuery";
// import "./TopItemSlider.style.css";
// import { musicSliderResponsive } from "../../../constants/musicSliderResponsive";

// const TopTracksSlider = ({ searchQuery }) => {
//   const { top10Tracks, isLoading, isError, error } = useTop10ArtistsTracks({
//     q: searchQuery,
//   });

//   if (isLoading) {
//     return <div>Loading...</div>;
//   }

//   if (isError) {
//     return <div>Error: {error.message}</div>;
//   }

//   return (
//     <div className="carousel-container">
//       <h1>Top 10 Most Popular Tracks</h1>
//       <Carousel
//         showDots={true}
//         responsive={musicSliderResponsive}
//         infinite={true}
//         autoPlay={true}
//         customTransition="all .5"
//         transitionDuration={500}
//         containerClass="carousel-container"
//         removeArrowOnDeviceType={["tablet", "mobile"]}
//         dotListClass="custom-dot-list-style"
//         itemClass="carousel-item-padding-40-px"
//       >
//         {top10Tracks.map((track) => (
//           <div className="carousel-item" key={track.id}>
//             <img
//               src={track.album.images[0]?.url || "/placeholder-image.jpg"}
//               alt={track.name}
//             />
//             <h2>노래: {track.name}</h2>
//             <p>가수: {track.artists.map((artist) => artist.name).join(", ")}</p>
//             <p>인기도: {track.popularity}</p>
//           </div>
//         ))}
//       </Carousel>
//     </div>
//   );
// };

// export default TopTracksSlider;


// // 4-2 작동안함 
// import React from "react";
// import Carousel from "react-multi-carousel";
// import "react-multi-carousel/lib/styles.css";
// import { useTop10ArtistsTracks } from "../../../hooks/useTopItemsQuery";
// import "./TopItemSlider.style.css";
// import { musicSliderResponsive } from "../../../constants/musicSliderResponsive";

// const TopTracksSlider = ({ searchQuery }) => {
//   const { top10Tracks, isLoading, isError, error } = useTop10ArtistsTracks({
//     q: searchQuery,
//   });

//   if (isLoading) {
//     return <div>Loading...</div>;
//   }

//   if (isError) {
//     return <div>Error: {error.message}</div>;
//   }

//   // top10Tracks가 배열인지 확인
//   if (!Array.isArray(top10Tracks) || top10Tracks.length === 0) {
//     return <div>No tracks available</div>;  // 데이터가 없을 경우 처리
//   }

//   return (
//     <div className="carousel-container">
//       <h1>Top 10 Most Popular Tracks</h1>
//       <Carousel
//         showDots={true}
//         responsive={musicSliderResponsive}
//         infinite={true}
//         autoPlay={true}
//         customTransition="all .5"
//         transitionDuration={500}
//         containerClass="carousel-container"
//         removeArrowOnDeviceType={["tablet", "mobile"]}
//         dotListClass="custom-dot-list-style"
//         itemClass="carousel-item-padding-40-px"
//       >
//         {top10Tracks.map((track) => (
//           <div className="carousel-item" key={track.id}>
//             <img
//               src={track.album?.images[0]?.url || "/placeholder-image.jpg"}
//               alt={track.name}
//             />
//             <h2>노래: {track.name}</h2>
//             <p>가수: {track.artists.map((artist) => artist.name).join(", ")}</p>
//             <p>인기도: {track.popularity}</p>
//           </div>
//         ))}
//       </Carousel>
//     </div>
//   );
// };

// export default TopTracksSlider;




// 5 ok 단지 진짜 
import React from "react";
import Carousel from "react-multi-carousel";
import "react-multi-carousel/lib/styles.css";
import { useTop10ArtistsTracks } from "../../../hooks/useTopItemsQuery";
import "./TopItemSlider.style.css";
import { musicSliderResponsive } from "../../../constants/musicSliderResponsive";

const TopTracksSlider = ({ searchQuery }) => {
  const { top10Tracks, isLoading, isError, error } = useTop10ArtistsTracks({
    q: searchQuery,
  });

  if (isLoading) {
    return <div>Loading...</div>;
  }

  if (isError) {
    return <div>Error: {error.message}</div>;
  }

  return (
    <div className="carousel-container">
      <h1>Top 10 Most Popular Tracks</h1>
      <Carousel
        showDots={true}
        responsive={musicSliderResponsive}
        infinite={true}
        autoPlay={true}
        customTransition="all .5"
        transitionDuration={500}
        containerClass="carousel-container"
        removeArrowOnDeviceType={["tablet", "mobile"]}
        dotListClass="custom-dot-list-style"
        itemClass="carousel-item-padding-40-px"
      >
        {top10Tracks.map((track) => (
          <div className="carousel-item" key={track.id}>
            <img
              src={track.album.images[0]?.url || "/placeholder-image.jpg"}
              alt={track.name}
            />
            <h2>노래: {track.name}</h2>
            <p>가수: {track.artists.map((artist) => artist.name).join(", ")}</p>
            <p>인기도: {track.popularity}</p>
          </div>
        ))}
      </Carousel>
    </div>
  );
};

export default TopTracksSlider;
